<?xml version="1.0" encoding="UTF-8"?>
<PropertyList>
  <sim include="Systems/views.xml">
    <description>Mikoyan-Gurevich MiG-25PD</description>
    <author>Petar Jedvaj, Domokos JÃ¼ttner, Daniel Overbeck</author>
    <long-description>The MiG-25PD Foxbat is a record-breaking supersonic interceptor. It was introduced in the Soviet Union and some other allied countries in 1970.</long-description>
    <flight-model>jsb</flight-model>
    <aero>MiG-25</aero>
    <flaps>
      <setting>0.0</setting>
      <setting>1.0</setting>
    </flaps>
    <model>
      <path>Aircraft/MiG-25/Models/MiG-25.xml</path>
    </model>
    <sound>
      <path>Aircraft/MiG-25/Sounds/Sound.xml</path>
    </sound>
    <multiplay>
      <generic>
        <!--payloads-->
        <short n="0" alias="/payload/weight[0]/id" />
        <short n="1" alias="/payload/weight[1]/id" />
        <short n="2" alias="/payload/weight[2]/id" />
        <short n="3" alias="/payload/weight[3]/id" />
        <short n="4" alias="/payload/weight[4]/id" />
        <float n="1" type="double" alias="/engines/engine[0]/nozzle-pos-norm" />
        <bool n="1" type="bool" alias="/engines/engine[0]/augmentation" />
        <float n="2" type="double" alias="/engines/engine[1]/nozzle-pos-norm" />
        <bool n="2" type="bool" alias="/engines/engine[1]/augmentation" />
      </generic>
    </multiplay>
  </sim>
  <engines>
    <engine n="0">
      <running>true</running>
      <reverser-pos-norm type="double">0</reverser-pos-norm>
    </engine>
    <engine n="1">
      <running>true</running>
      <reverser-pos-norm type="double">0</reverser-pos-norm>
    </engine>
  </engines>
  <fdm>
    <jsbsim>
      <systems>
        <brakes>
          <brake-left-cmd type="float" alias="/controls/gear/brake-left" />
          <brake-right-cmd type="float" alias="/controls/gear/brake-right" />
          <brake-parking type="bool" alias="/controls/gear/brake-parking" />
        </brakes>
      </systems>
    </jsbsim>
  </fdm>
  
  <input>
    <keyboard>
      <key n="119">
	<name>w</name>
	<desc>Cycle Weapon Type</desc>
	<binding>
	  <command>nasal</command>
	  <script>pylons.fcs.cycleLoadedWeapon();</script>
	</binding>
      </key>

      <key n="101">
	<name>e</name>
	<desc>trigger</desc>
	<binding>
	  <command>property-assign</command>
	  <property>controls/armament/trigger</property>
	  <value>1</value>
	</binding>
	<mod-up>
	  <binding>
            <command>property-assign</command>
            <property>controls/armament/trigger</property>
            <value>0</value>
	  </binding>
	</mod-up>
      </key>

      <key n="109">
	<name>m</name>
	<desc>Masterarm</desc>
	<binding>
          <command>nasal</command>
          <script><![CDATA[
          setprop("controls/armament/master-arm",!getprop("controls/armament/master-arm"));
          screen.log.write("Master-arm "~(getprop("controls/armament/master-arm")==0?"OFF":"ON"), 0.5, 0.5, 1);
          
          ]]></script>
	</binding>
      </key>

    </keyboard>
  </input>
  <payload>
    <armament>
      <r-60>
        <!-- launch reference: https://www.liveleak.com/view?i=879_1404076874 @ 2:25 -->
        <!-- info on Komar seeker head: http://www.ausairpower.net/APA-Legacy-SAM-Upgrades.html -->
        <!--detection and firing-->
        <max-fire-range-nm type="double">4.32</max-fire-range-nm> <!-- max range that the FCS allows firing -->
        <min-fire-range-nm type="double">0.001</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
        <FCS-field-deg type="int">24</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
        <class type="string">A</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
        <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
        <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
        <cool-time type="double">1000</cool-time> <!-- Time to cold the seeker from fully warm. -->
        <cool-duration type="int">0</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
        <warm-detect-range-nm type="double">4.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
        <detect-range-nm type="double">4.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
        <seeker-beam-width-deg type="double">2.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
        <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
        <!--navigation, guiding and seekerhead-->
        <seeker-field-deg type="int">24</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
        <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
        <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
        <all-aspect type="bool">false</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
        <seeker-angular-speed-dps type="double">35</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
        <lock-on-sun-deg type="double">15.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
        <loft-altitude type="int">0</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
        <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
        <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to
	reaquire lock after losing it. [optional] -->
	<lock-on-after-launch type="bool">true</lock-on-after-launch>
        <!--engine-->
        <thrust-lbf-stage-1 type="double">1281.41</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
        <thrust-lbf-stage-2 type="double">0.0</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
        <stage-1-duration-sec type="double">4.0</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
        <stage-2-duration-sec type="double">0.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
        <weight-fuel-lbm type="double">50</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
        <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
        <!--aerodynamic-->
        <weight-launch-lbs type="double">96</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
        <drag-coeff type="double">0.43</drag-coeff> <!-- drag coefficient -->
        <cross-section-sqft type="double">0.12</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
        <max-g type="int">35</max-g> <!-- max G-force the missile can pull at sealevel -->
        <min-speed-for-guiding-mach type="double">0.7</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
        <!--detonation-->
        <weight-warhead-lbs type="double">6.6</weight-warhead-lbs> <!-- warhead weight -->
        <arming-time-sec type="double">0.4</arming-time-sec> <!-- time for weapon to arm -->
        <self-destruct-time-sec type="double">43</self-destruct-time-sec> <!-- time before selfdestruct -->
        <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
        <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
        <!--avionics sounds-->
        <vol-search type="double">0</vol-search> <!-- sound volume when searcing -->
        <vol-track type="double">0</vol-track> <!-- sound volume when having lock -->
        <!--launching conditions-->
        <rail type="bool">true</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
        <rail-length-m type="double">3.0</rail-length-m> <!-- length of tube/rail -->
        <rail-point-forward type="bool">true</rail-point-forward> <!-- true for rail, false for rail/tube with a pitch -->
        <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
        <!--countermeasures-->
        <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
        <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
        <!--datalink-->
        <telemetry type="bool">false</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
        <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
      </r-60>

      <r-40rd>
        <!--detection and firing-->
        <max-fire-range-nm type="double">44</max-fire-range-nm> <!-- max range that the FCS allows firing -->
        <min-fire-range-nm type="double">1.0</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
        <FCS-field-deg type="int">35</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
        <class type="string">A</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
        <fire-msg type="string">Fox 1</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
        <coolable type="bool">false</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
        <cool-time type="double">10000</cool-time> <!-- Time to cold the seeker from fully warm. -->
        <cool-duration type="int">10000</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
        <warm-detect-range-nm type="double">10.0</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
        <detect-range-nm type="double">10.0</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
        <seeker-beam-width-deg type="double">2.5</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
        <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
        <lock-on-after-launch type="bool">true</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
        <auto-switch-target-allowed type="bool">true</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
        <prowl-flight type="string">gyro-pitch</prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
        <switch-time-sec type="double">5.0</switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
        <!--navigation, guiding and seekerhead-->
        <seeker-field-deg type="int">110</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
        <guidance type="string">radar</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
        <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
        <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
        <seeker-angular-speed-dps type="double">14.9</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
        <lock-on-sun-deg type="double">0.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
        <loft-altitude type="int">70000</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
        <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
        <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
        <!--engine-->
        <thrust-lbf-stage-1 type="double">8500</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
        <thrust-lbf-stage-2 type="double">700</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
        <stage-1-duration-sec type="double">6.1</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
        <stage-2-duration-sec type="double">14.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
        <weight-fuel-lbm type="double">300</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
        <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
        <!--aerodynamic-->
        <weight-launch-lbs type="double">560</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
        <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
        <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
        <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
        <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
        <ignore-wind-at-release type="bool">true</ignore-wind-at-release>
        <!--detonation-->
        <weight-warhead-lbs type="double">85.98</weight-warhead-lbs> <!-- warhead weight -->
        <arming-time-sec type="double">1.6</arming-time-sec> <!-- time for weapon to arm -->
        <self-destruct-time-sec type="double">90</self-destruct-time-sec> <!-- time before selfdestruct -->
        <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
        <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
        <!--avionics sounds-->
        <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
        <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
        <!--launching conditions-->
        <rail type="bool">false</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
        <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
        <!--countermeasures-->
        <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
        <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
        <!--datalink-->
        <telemetry type="bool">true</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
        <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
      </r-40rd>

      <r-40td>
        <!--detection and firing-->
        <max-fire-range-nm type="double">39.41</max-fire-range-nm> <!-- max range that the FCS allows firing -->
        <min-fire-range-nm type="double">0.01</min-fire-range-nm> <!-- it wont get solid lock before the target has this range -->
        <FCS-field-deg type="int">35</FCS-field-deg> <!-- fire control system total field of view diameter for when searching and getting lock before launch. -->
        <class type="string">A</class> <!-- put in letters here that represent the types the missile can fire at. A=air, M=marine, G=ground -->
        <fire-msg type="string">Fox 2</fire-msg> <!-- what the pilot will call out over the comm when he fires this weapon -->
        <coolable type="bool">true</coolable> <!-- If the seeker supports being cooled. (AIM-9L or later supports) -->
        <cool-time type="double">1.5</cool-time> <!-- Time to cold the seeker from fully warm. -->
        <cool-duration type="int">9000</cool-duration> <!-- Typically 2.5 hours for cooling fluids. Much higher for electrical. -->
        <warm-detect-range-nm type="double">6.5</warm-detect-range-nm> <!-- Current guidance mode detect range. (when warm) -->
        <detect-range-nm type="double">8.5</detect-range-nm> <!-- Current guidance mode default detect range. (when cold) -->
        <seeker-beam-width-deg type="double">3.0</seeker-beam-width-deg> <!-- Seeker detector field of view diameter -->
        <ready-time type="double">0.2</ready-time> <!-- time to get ready after standby mode. -->
        <lock-on-after-launch type="bool">true</lock-on-after-launch> <!--bool. LOAL supported. For loal to work [optional]-->
        <auto-switch-target-allowed type="bool">true</auto-switch-target-allowed> <!--bool. Can switch target at will if it loses lock [optional]-->
        <prowl-flight type="string">gyro-pitch</prowl-flight> <!--unguided/level/gyro-pitch for LOAL and that stuff, when not locked onto stuff.-->
        <switch-time-sec type="double">5.0</switch-time-sec> <!--auto switch of targets in flight: time to scan FoV.-->
        <!--navigation, guiding and seekerhead-->
        <seeker-field-deg type="int">110</seeker-field-deg> <!-- missiles own seekers total FOV diameter. -->
        <guidance type="string">heat</guidance> <!-- heat/radar/semi-radar/laser/gps/vision/unguided/pitch/gyro-pitch/radiation/inertial -->
        <navigation type="string">APN</navigation> <!-- guidance-law: direct/PN/APN/PNxxyy/APNxxyy (use direct for gravity bombs, use PN for very old missiles, use APN for modern missiles, use PNxxyy/APNxxyy for surface to air where xx is degrees to aim above target, yy is seconds it will do that) -->
        <all-aspect type="bool">true</all-aspect> <!-- bool. set to false if missile only locks on reliably to rear of target aircraft -->
        <seeker-angular-speed-dps type="double">14.9</seeker-angular-speed-dps> <!-- only for heat/vision seeking missiles. Max angular speed that the target can move as seen from seeker, before seeker loses lock. -->
        <lock-on-sun-deg type="double">0.0</lock-on-sun-deg> <!-- only for heat seeking missiles. If it looks at sun within this angle, it will lose lock on target. -->
        <loft-altitude type="int">40000</loft-altitude> <!-- if 0 then no snap up. Below 10000 then cruise altitude above ground. Above 10000 max altitude it will snap up to. -->
        <terrain-follow type="bool">false</terrain-follow> <!-- bool. used for anti-ship missiles that should be able to terrain follow instead of purely sea skimming. -->
        <reaquire type="bool">true</reaquire> <!-- bool. If weapon will try to reaquire lock after losing it. [optional] -->
        <!--engine-->
        <thrust-lbf-stage-1 type="double">8500</thrust-lbf-stage-1> <!-- stage 1 thrust [optional] -->
        <thrust-lbf-stage-2 type="double">700</thrust-lbf-stage-2> <!-- stage 2 thrust [optional] -->
        <stage-1-duration-sec type="double">6.1</stage-1-duration-sec> <!-- stage 1 duration [optional] -->
        <stage-2-duration-sec type="double">14.0</stage-2-duration-sec> <!-- stage 2 duration [optional] -->
        <weight-fuel-lbm type="double">300</weight-fuel-lbm> <!-- fuel weight [optional]. If this property is not present, it won't lose weight as the fuel is used. -->
        <vector-thrust type="bool">false</vector-thrust> <!-- Boolean. [optional] -->
        <!--aerodynamic-->
        <weight-launch-lbs type="double">560</weight-launch-lbs> <!-- total weight of armament, including fuel and warhead. -->
        <drag-coeff type="double">0.5</drag-coeff> <!-- drag coefficient -->
        <cross-section-sqft type="double">0.143</cross-section-sqft> <!-- normally is crosssection area of munition (without fins) -->
        <max-g type="int">28</max-g> <!-- max G-force the missile can pull at sealevel -->
        <min-speed-for-guiding-mach type="double">0.8</min-speed-for-guiding-mach> <!-- minimum speed before the missile steers, before it reaches this speed it will fly ballistic. -->
        <ignore-wind-at-release type="bool">true</ignore-wind-at-release>
        <!--detonation-->
        <weight-warhead-lbs type="double">85.98</weight-warhead-lbs> <!-- warhead weight -->
        <arming-time-sec type="double">1.6</arming-time-sec> <!-- time for weapon to arm -->
        <self-destruct-time-sec type="double">90</self-destruct-time-sec> <!-- time before selfdestruct -->
        <self-destruct-at-lock-lost type="double">25</self-destruct-at-lock-lost> <!-- selfdestruct if lose target -->
        <max-report-distance type="double">65</max-report-distance> <!-- Interpolation hit: max distance from target it report it exploded, not passed. Trig hit: Distance where it will trigger. -->
        <!--avionics sounds-->
        <vol-search type="double">0.0</vol-search> <!-- sound volume when searcing -->
        <vol-track type="double">0.0</vol-track> <!-- sound volume when having lock -->
        <!--launching conditions-->
        <rail type="bool">false</rail> <!-- if the weapon is rail or tube fired set to true. If dropped 7ft before ignited set to false. -->
        <drop-time type="double">0.0</drop-time> <!-- Time to fall before stage 1 thrust starts. -->
        <!--countermeasures-->
        <chaff-resistnace type="double">0.950</chaff-resistnace> <!-- Float 0-1. Amount of resistance to chaff. Default 0.950. [optional] -->
        <flare-resistance type="double">0.950</flare-resistance> <!-- Float 0-1. Amount of resistance to flare. Default 0.950. [optional] -->
        <!--datalink-->
        <telemetry type="bool">true</telemetry> <!-- Boolean. Data link back to aircraft when missile is flying. [optional] -->
        <DLZ type="bool">false</DLZ> <!-- Supports dynamic launch zone info. For now only works with A/A. [optional] -->
      </r-40td>

      <station-name>station</station-name>
      <models>Aircraft/MiG-25/Models/Stores</models>
      <modelsUseCase>false</modelsUseCase>
      <msg type="bool">true</msg>
      <enable-craters type="bool">true</enable-craters>
      <pylon-offset type="int">0</pylon-offset>
      <pylon-stations>payload</pylon-stations>
      <station-name type="string">station</station-name>
      <hit-interpolation type="bool">true</hit-interpolation>
      <one-xml-per-type type="bool">false</one-xml-per-type>
      <gravity-dropping type="bool">false</gravity-dropping>
    </armament>
  </payload>
  <nasal>
    <vector>
      <file>Aircraft/MiG-25/Nasal/vector.nas</file>
    </vector>
    <armament>
      <file>Aircraft/MiG-25/Nasal/guided-missiles.nas</file><!-- must be before station-manager -->
    </armament>
    <stations>
      <file>Aircraft/MiG-25/Nasal/station-manager.nas</file><!-- must be before fire-control and pylons -->
    </stations>
    <fc>
      <file>Aircraft/MiG-25/Nasal/fire-control.nas</file><!-- must be before pylons -->
    </fc>

    <rcs>
      <file>Aircraft/MiG-25/Nasal/rcs.nas</file>
    </rcs>

    <radar>
      <file>Aircraft/MiG-25/Nasal/RADAR/radar2.nas</file>
      <file>Aircraft/MiG-25/Nasal/RADAR/target_class.nas</file>
      <file>Aircraft/MiG-25/Nasal/RADAR/radarTool.nas</file>
    </radar>

    <rwr>
      <file>Aircraft/MiG-25/Nasal/RADAR/rwr.nas</file>
    </rwr>

    <myradar>
      <file>Aircraft/MiG-25/Nasal/RADAR/main.nas</file>
    </myradar>
    
    <mps>
      <file>Aircraft/MiG-25/Nasal/mp-stores.nas</file>
    </mps>
    <pylons>
      <file>Aircraft/MiG-25/Nasal/pylons.nas</file>
    </pylons>
  </nasal>
</PropertyList>

